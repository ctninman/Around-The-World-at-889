{"version":3,"sources":["CapitalCard.js","Capitals.js","Flag.js","Flags.js","Continent.js","Continents.js","PopulationRow.js","Population.js","Home.js","QuizHome.js","ActiveCapitalQuiz.js","StartScreen.js","CapitalQuiz.js","ActiveContinentQuiz.js","ContinentQuiz.js","ActiveFlagQuiz.js","FlagQuiz.js","ActivePopulationQuiz.js","PopulationQuiz.js","Quizzes.js","Country.js","Filter.js","CountriesList.js","NavBar.js","App.js","index.js"],"names":["CapitalCard","country","useState","revealCapital","setRevealCapital","onClick","className","style","display","justifyContent","height","width","borderRadius","color","backgroundColor","wordWrap","alignItems","border","borderColor","cursor","capital","textAlign","alignSelf","src","flags","png","alt","padding","marginTop","overflowWrap","name","common","Capitals","countries","capitalCountryList","setCapitalCountryList","capitalsContinent","setCapitalsContinent","filterCapitalsByContinent","event","filteredContinent","filter","target","value","continents","useEffect","document","title","flexWrap","sort","a","b","Math","random","map","Flag","revealFlag","setRevealFlag","Flags","flagCountryList","setFlagCountryList","allCountries","flagsContinent","setFlagsContinent","filterFlagsByContinent","flexDirection","Continent","paddingLeft","alignContent","margin","flag","Continents","alphabetize","continentCountryList","setContinentCountryList","selectedContinents","setSelectedContinents","filterByContinent","marginLeft","marginRight","length","PopulationRow","size","continent","cca3","ccn3","area","Population","selectedContinent","setSelectedContinent","selectedSize","setSelectedSize","countriesToDisplay","population","marginBottom","onChange","id","flexFlow","fontSize","toLocaleString","translations","ita","fifa","Home","paddingBottom","paddingTop","href","QuizHome","continentHighScore","flagHighScore","capitalHighScore","populationHighScore","fullUserObject","userScore","userName","ActiveCapitalQuiz","capitalQuizCountry","incorrectOne","incorrectTwo","incorrectThree","handleCapitalAnswer","setNextCapitalQuestion","capitalQuizScore","currentCapitalQuestion","capitalResponseGiven","randomizeList","list","getElementById","nodes","children","i","items","temp","rand","cached","slice","floor","randomizeItems","Array","prototype","call","appendChild","paddingRight","StartScreen","startQuiz","message","highScore","CapitalQuiz","countryData","setCapitalHighScore","history","setUserScore","checkForDuplicates","useHistory","setCapitalQuizCountry","setIncorrectOne","setIncorrectTwo","setIncorrectThree","setCapitalResponseGiven","setCurrentCapitalQuestion","setCapitalQuizScore","capitalButtons","getElementsByClassName","resetButtonColors","innerHTML","addEventListener","push","ActiveContinentQuiz","currentContinentQuestion","continentQuizScore","continentResponseGiven","handleAnswer","continentQuizCountry","setNextQuestion","ContinentQuiz","setContinentHighScore","setContinentQuizCountry","setContinentResponseGiven","setCurrentContinentQuestion","setContinentQuizScore","continentButtons","ActiveFlagQuiz","flagQuizCountry","incorrectFlagOne","incorrectFlagTwo","incorrectFlagThree","handleFlagAnswer","setNextFlagQuestion","flagQuizScore","currentFlagQuestion","flagResponseGiven","FlagQuiz","setFlagHighScore","setFlagQuizCountry","setIncorrectFlagOne","setIncorrectFlagTwo","setIncorrectFlagThree","setFlagResponseGiven","setCurrentFlagQuestion","setFlagQuizScore","flagButtons","ActivePopulationQuiz","orderedCountriesArray","handlePopulationAnswer","setNextPopulationQuestion","populationQuizScore","currentPopulationQuestion","populationResponseGiven","PopulationQuiz","orderNumbers","setPopulationHighScore","setOrderedContriesArray","setPopulationResponseGiven","setCurrentPopulationQuestion","setPopulationQuizScore","newRandomCorrectCountry","newRandomIncorrectOne","newRandomIncorrectTwo","newRandomIncorrectThree","populationButtons","Quizzes","to","exact","activeStyle","background","path","Country","nativeNameObject","Object","values","nativeName","officialLanguages","languages","officialCurrenciesObject","currencies","subregion","join","symbol","car","side","Filter","onSearchText","onSetSearchText","onLetterChange","type","placeholder","CountriesList","alphabetizeCountries","searchText","setSearchText","filteredCountryList","toLowerCase","startsWith","linkStyles","textDecoration","NavBar","login","setLogin","enterUserName","App","setCountries","setUserName","setFullUserObject","continentsHighScore","flagsHighScore","capitalsHighScore","fetch","then","res","json","data","unMemberCountries","unMember","cca2","preventDefault","reset","method","userData","object","foundUser","find","user","headers","body","JSON","stringify","ReactDOM","render"],"mappings":"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","file":"static/js/main.d842884f.chunk.js","sourcesContent":["import { useState } from 'react'\n\nfunction CapitalCard ({country}) {\n\n  const [ revealCapital, setRevealCapital ] = useState(false)\n\n  return (\n    <div onClick={() => setRevealCapital(!revealCapital)} className='capital_card'>\n      {revealCapital \n        ?  \n        <div style ={{display: 'flex', justifyContent: 'center', height: '120px', width: '150px', borderRadius: '5px', color: 'darkblue'}}>\n          <div className='show-capital' style={{backgroundColor: 'black', color: 'white', height: '75px', borderRadius: '5px', width: '150px', wordWrap: 'break-word', alignItems: 'center', border: '2px solid', borderColor: 'white'}}>\n            <h3 style={{cursor: 'alias'}}>{country.capital}</h3>\n          </div>    \n        </div>  \n        : \n        <div style={{display: 'inline-block', textAlign: 'center'}}>   \n          <img \n            style={{height: '75px', border: '2px solid', borderRadius: '3px', alignSelf: 'center'}}\n            className='capital_card_flag' \n            src={country.flags.png} \n            alt='Flag'/>\n          <h3 style={{textAlign: 'center', backgroundColor: 'white', padding: '5px', borderRadius: '5px', marginTop: '5px', overflowWrap: 'anywhere', border: '2px solid'}}>{country.name.common}</h3>\n        </div> \n      }\n    </div>  \n  )\n}\n\nexport default CapitalCard","import CapitalCard from \"./CapitalCard\"\nimport {useEffect} from \"react\"\n\nfunction Capitals ({countries, capitalCountryList, setCapitalCountryList, capitalsContinent, setCapitalsContinent}) {\n\n\n  useEffect (() => {\n    document.title = \"WQW - Capitals\"\n  }, [] )\n\n  function filterCapitalsByContinent (event) {\n    const filteredContinent = countries.filter((country) => {\n      if (event.target.value === 'the world') {\n        return true\n      } else if (event.target.value === country.continents[0]) {\n        return true\n      }\n        return false\n    }) \n    setCapitalCountryList(filteredContinent)\n    setCapitalsContinent(event.target.value)\n  }\n\n  return (\n    <div style={{marginTop: '-10px'}}>\n      <h1 className='tab-header'>Capitals of {capitalsContinent}</h1>\n      <div style={{marginTop: '-25px'}}>\n          <button onClick={filterCapitalsByContinent} value={'the world'}>The World</button> \n          <button onClick={filterCapitalsByContinent} value={'Africa'}>Africa</button>\n          <button onClick={filterCapitalsByContinent} value={'Europe'}>Europe</button>\n          <button onClick={filterCapitalsByContinent} value={'Asia'}>Asia</button>\n          <button onClick={filterCapitalsByContinent} value={'Oceania'}>Oceania</button>\n          <button onClick={filterCapitalsByContinent} value={'North America'}>North America</button>\n          <button onClick={filterCapitalsByContinent} value={'South America'}>South America</button>\n        </div>\n      <div style={{display: 'flex', flexWrap: 'wrap', justifyContent: 'space-around'}}>\n        {capitalCountryList.sort((a, b) => 0.5 - Math.random()).map((country) => (\n          <CapitalCard \n            key={country.name.common}\n            country={country}\n            style={{backgroundColor: '#234234'}}\n          />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Capitals","import {useState} from 'react'\n\nfunction Flag ({country}) {\n\n  const [ revealFlag, setRevealFlag ] = useState(false)\n\n  return (\n    <div onClick={() => setRevealFlag(!revealFlag)} className='flag-section-card'>\n      {revealFlag \n        ?  \n        <div style ={{display: 'flex', justifyContent: 'center', height: '130px', width: '200px', borderRadius: '5px', alignItems: 'center'}}>\n          <div className='show-country' style={{display: 'flex', justifyContent: 'center', height: '80px', width: '200px', borderRadius: '5px', color: 'white', backgroundColor: 'black', alignItems: 'center', border: '2px solid white'}}> \n            <h2>{country.name.common} </h2> \n          </div>\n        </div>  \n        : \n        <div style={{display: 'flex', justifyContent: 'center'}}> \n          <img style={{border: '2px solid', borderRadius: '3px'}}className='capital_card_flag' src={country.flags.png} alt=\"Flag\"/>\n      </div> }\n    </div>  \n  )\n}\n\nexport default Flag","import {useEffect} from \"react\"\nimport Flag from './Flag'\n\nfunction Flags ({ flagCountryList, setFlagCountryList, allCountries, flagsContinent, setFlagsContinent}) {\n\n  useEffect (() => {\n    document.title = \"WQW - Flags\"\n  }, [] )\n\n  function filterFlagsByContinent (event) {\n    const filteredContinent = allCountries.filter((country) => {\n      if (event.target.value === 'the world') {\n        return true\n      } else if (event.target.value === country.continents[0]) {\n        return true\n      }\n        return false\n    }) \n    setFlagCountryList(filteredContinent)\n    setFlagsContinent(event.target.value)\n  }\n  \n  return (\n    <div style={{marginTop: '-10px'}}>\n      <div>\n        <h1 className='tab-header'>Flags of {flagsContinent}</h1>\n        <div style={{marginTop: '-25px'}}>\n          <button onClick={filterFlagsByContinent} value={'the world'}>The World</button> \n          <button onClick={filterFlagsByContinent} value={'Africa'}>Africa</button>\n          <button onClick={filterFlagsByContinent} value={'Europe'}>Europe</button>\n          <button onClick={filterFlagsByContinent} value={'Asia'}>Asia</button>\n          <button onClick={filterFlagsByContinent} value={'Oceania'}>Oceania</button>\n          <button onClick={filterFlagsByContinent} value={'North America'}>North America</button>\n          <button onClick={filterFlagsByContinent} value={'South America'}>South America</button>\n        </div>\n      </div>\n        <div style={{display: 'flex', flexWrap: 'wrap', flexDirection: 'row', justifyContent: 'space-around'}}>\n          {flagCountryList.sort((a, b) => 0.5 - Math.random()).map((country) => (\n            <Flag \n              key={country.name.common}\n              country={country}\n            />\n          ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Flags","function Continent ({country}) {\n\n  return (\n    <div \n      className='listed-country'\n      style=\n        {{paddingLeft: '10px',\n        display: 'flex', \n        flexDirection: 'row',\n        border: '2px solid', \n        alignContent: 'space-around', \n        textAlign: 'left',\n        flexWrap: 'wrap',\n        backgroundColor: 'white', \n        margin: '10px', \n        width: '150px', \n        height: '40px',  \n        borderRadius: '5px'}}>\n      <h4>{country.flag} {country.name.common}</h4>\n    </div>\n  )\n}\n\nexport default Continent","import Continent from \"./Continent\"\nimport {useEffect} from 'react'\n\nfunction Continents ({alphabetize, countries, continentCountryList, setContinentCountryList, selectedContinents, setSelectedContinents}) {\n   \n  useEffect (() => {\n    document.title = \"WQW - Continents\"\n  }, [] )\n\n  function filterByContinent (event) {\n    const filteredContinent = countries.filter((country) => {\n      if (event.target.value === 'the world') {\n        return true\n      } else if (event.target.value === country.continents[0]) {\n        return true\n      }\n      return false\n    })\n    setContinentCountryList(filteredContinent) \n    setSelectedContinents(event.target.value)\n  }\n\n    // *** JSX *** //\n  return (\n    <div style={{marginTop: '-10px'}}>\n      <div >\n        <h1 className='tab-header'>Continents</h1>\n        <div style={{marginTop: '-25px'}}>\n          <button onClick={filterByContinent} value={'the world'}>All Continents</button>\n          <button onClick={filterByContinent} value={'Africa'}>Africa</button>\n          <button onClick={filterByContinent} value={'Europe'}>Europe</button>\n          <button onClick={filterByContinent} value={'Asia'}>Asia</button>\n          <button onClick={filterByContinent} value={'Oceania'}>Oceania</button>\n          <button onClick={filterByContinent} value={'North America'}>North America</button>\n          <button onClick={filterByContinent} value={'South America'}>South America</button>\n          <button onClick={filterByContinent} value={'Antarctica'}>Antarctica</button>\n\n        </div>\n        <h2 \n          className='tab-header' \n          style=\n            {{cursor: 'default',\n            backgroundColor: '#609240', \n            color: 'white', marginLeft: '200px', \n            marginRight: '200px', \n            marginTop: '0px'}}\n          >There are {continentCountryList.length} countries in {selectedContinents}.\n        </h2>\n      </div>\n      <div style={{display: 'flex', flexDirection: 'row', flexWrap:'wrap', justifyContent: 'space-between'}}>\n        {continentCountryList.sort(alphabetize).map((country) => (\n          <Continent \n          key={country.name.common}\n          country={country}/>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Continents","function PopulationRow ({name, size, continent, flag, country}) {\n\n  return (\n    <div key={country.area} className='pop-icon' style={{display:\"flex\", flexDirection: 'row', alignItems: 'center', justifyContent: 'flex-start'}}>\n      <h4 key={name} style={{marginRight: '15px', marginLeft: '15px', width: '50px', textAlign: 'left'}}>{flag}</h4>\n      <h6 key={country.cca3} style={{marginRight: '15px', marginLeft: '15px', width: '200px', textAlign: 'left'}}>{name}</h6>\n      <h6 key={size} style={{marginRight: '15px', marginLeft: '15px', width: '150px', textAlign: 'right'}}>{size}</h6>\n      <h6 key={country.ccn3} style={{marginRight: '15px', marginLeft: '15px', width: '90px', textAlign: 'center'}}>{continent}</h6>\n    </div>\n  )\n}\n\nexport default PopulationRow","import {useState, useEffect} from \"react\"\nimport PopulationRow from './PopulationRow'\n\nfunction Population ({countries}) {\n  \n    // *** STATE VARIABLES *** //\n  const [selectedContinent, setSelectedContinent] = useState(\"the world\");\n  const [selectedSize, setSelectedSize] = useState('any size')\n\n  useEffect (() => {\n    document.title = \"WQW - Population\"\n  }, [] )\n\n  function handleContinentChange(event) {\n    setSelectedContinent(event.target.value);\n  }\n\n  function handleSizeChange(event) {\n    setSelectedSize(event.target.value);\n  }\n\n  const countriesToDisplay = countries.filter((country) => {\n    if (selectedContinent === \"the world\") return true;\n    return country.continents[0] === selectedContinent;\n    }).filter(country => {\n      if(selectedSize === 'any size'){\n        return true\n      } else if (selectedSize === 'more than 100 Million people') {\n        return country.population >= 100000000\n      } else if (selectedSize === 'between 50 million - 100 million people') {\n        return country.population >= 50000000 && country.population < 100000000\n      } else if (selectedSize === \"between 10 million - 50 million people\") {\n        return country.population >=10000000 && country.population < 50000000\n      } else if (selectedSize === \"between 1 million - 10 million people\") {\n        return country.population >= 1000000 && country.population < 10000000\n      } else if (selectedSize === 'fewer than 1 million people') {\n        return country.population < 1000000\n      }\n      return false\n   }\n  );\n\n    // *** JSX *** //  \n  return (\n    <div style={{marginTop: '-10px'}}>\n      <div>\n        <h1 className='tab-header' style={{marginBottom: '5px'}}>Population</h1>\n      </div>\n      <div>\n        <select onChange={handleContinentChange} name=\"continent_select\" id=\"continent_select\">\n          <option value=\"the world\">All Continents</option>\n          <option value=\"Africa\">Africa</option>\n          <option value=\"Asia\">Asia</option>\n          <option value=\"Europe\">Europe</option>\n          <option value=\"Oceania\">Oceania</option>\n          <option value=\"North America\">North America</option>\n          <option value=\"South America\">South America</option>\n        </select>\n\n        <select onChange={handleSizeChange} name=\"size_select\" id=\"size_select\">\n          <option value=\"any size\">All Sizes</option>\n          <option value=\"more than 100 Million people\">Greater than 100 Million</option>\n          <option value=\"between 50 million - 100 million people\">Between 50 Million - 100 Million</option>\n          <option value=\"between 10 million - 50 million people\">Between 10 Million - 50 Million</option>\n          <option value=\"between 1 million - 10 million people\">Between 1 Million - 10 Million</option>\n          <option value=\"fewer than 1 million people\">Less than 1 Million</option>\n        </select>\n\n        <h3 \n          className='tab-header'  \n          style={{backgroundColor: \"#609240\", \n            color: 'white', \n            marginLeft: '200px', \n            marginRight: '200px', \n            marginBottom: '0px',\n            marginTop: '5px'}}\n          >There \n            {countriesToDisplay.length === 1 ? ' is' : ' are'} {countriesToDisplay.length} \n            {countriesToDisplay.length === 1 ? ' country' : ' countries'} in {selectedContinent} that \n            {countriesToDisplay.length === 1 ? ' has' : ' have'} {selectedSize}.\n        </h3>\n        <div style={{display: 'flex', justifyContent: 'center', marginLeft: '38px'}}>\n          <div className='pop-icon' \n            style={{display:\"flex\", \n              flexDirection: 'row', \n              alignItems: 'center', \n              justifyContent: 'center',\n              backgroundColor: 'black',\n              color: '#93C572',\n              borderColor: 'white',\n              height: '30px'}}>\n            <h3 style={{marginRight: '15px', marginLeft: '15px', width: '50px', textAlign: 'center'}}>Flag</h3>\n            <h3 style={{marginRight: '15px', marginLeft: '15px', width: '200px', textAlign: 'center'}}>Country</h3>\n            <h3 style={{marginRight: '15px', marginLeft: '15px', width: '150px', textAlign: 'center'}}>Population</h3>\n            <h3 style={{marginRight: '15px', marginLeft: '15px', width: '90px', textAlign: 'center'}}>Continent</h3>\n          </div>\n        </div>\n        <div style={{display: 'flex', flexFlow: 'column wrap', justifyContent: 'center'}}>\n          <ol className=\"Items\" \n            style={{fontSize: '150%', \n              display: 'table', \n              margin: '0 auto', \n              flexDirection: 'column', \n              justifyContent: 'center', \n              alignContent: 'center'}}>\n            {countriesToDisplay.map((country) => (\n              <li key={country.fifa}>\n                <PopulationRow \n                country={country}\n                key={country.translations.ita.common}\n                name={country.name.common} \n                size={(country.population).toLocaleString()} \n                continent={country.continents[0]} \n                flag={country.flag}/>\n              </li>\n            ))}\n          </ol>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Population","import {useEffect} from 'react'\n\nfunction Home () {\n\n  useEffect (() => {\n    document.title = \"Around the World at 889\"\n  }, [] )\n\n  return (\n    <div>\n      <div>\n        <h1 className='tab-header'>Around the World at 889</h1>\n      </div>\n      <div>\n        <div>\n          <h1>🇦🇬🇰🇪🇸🇬🇪🇨🇳🇷🇧🇩🇳🇱🇲🇦🇳🇵🇹🇳🇨🇺🇦🇿🇨🇾🇦🇷🇻🇺🇩🇯🇿🇼🇨🇳🇳🇮🇬🇷🇬🇩🇺🇸🇧🇪</h1>\n        </div>\n        <div className='quiz-tv' style={{marginLeft: '15%', marginRight: '15%'}} >\n          <h1>🇳🇴 Explore and learn the flags, capitals, 🇹🇬<br/> continents, and population<br/>of all the countries of the world.</h1>\n          <h2 style={{cursor: 'default'}}>🇵🇭 Do you have what it takes 🇪🇸<br/> to reach 100 ⭐ in the quiz section?</h2>\n          <h3>Create or enter your username to keep track of your high scores</h3>\n        </div>\n           <div>\n          <h1>🇧🇪🇺🇸🇬🇩🇬🇷🇳🇮🇨🇳🇿🇼🇩🇯🇻🇺🇦🇷🇨🇾🇦🇿🇨🇺🇹🇳🇳🇵🇲🇦🇳🇱🇧🇩🇳🇷🇪🇨🇸🇬🇰🇪🇦🇬</h1>\n        </div>\n      </div>\n      <footer style={{textAlign: 'left', color: 'white', paddingLeft: '10px', paddingBottom: '10px', paddingTop: '20px'}}>\n          Background photo by <a style={{color: 'lightgray'}}href={'https://unsplash.com/@marjan_blan?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText'}>Marjan Blan | @marjanblan</a> on <a style={{color: 'lightgray'}} href={\"https://unsplash.com/s/photos/world-map?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\"}>Unsplash</a>\n        </footer>\n    </div>\n  )\n}\n\nexport default Home","function QuizHome ({continentHighScore, flagHighScore, capitalHighScore, populationHighScore, fullUserObject, userScore}) {\n\n  return (\n    <div className='quiz-tv'>\n      <h1 style={{color: 'red'}}>{fullUserObject.userName === \"Player\" ? 'Enter a username to save your high scores' : null}</h1>\n      <h1 \n        className='tab-header' \n        style={{backgroundColor: 'black', \n        color: 'white', marginLeft: '15%', \n        marginRight: '15%'}}>\n          {fullUserObject.userName}'s Total Score: {userScore}\n        </h1>\n      <h2 style={{cursor: 'default'}}>\n        Continents High Score: {continentHighScore}\n      </h2>\n      <h2 style={{cursor: 'default'}}>\n        Flags High Score: {flagHighScore}\n      </h2>\n      <h2 style={{cursor: 'default'}}>\n        Capitals High Score: {capitalHighScore}\n      </h2>\n      <h2 style={{cursor: 'default'}}>\n        Population High Score: {populationHighScore}\n      </h2>\n    </div>\n  )\n}\n\nexport default QuizHome","function ActiveCapitalQuiz ({ capitalQuizCountry, incorrectOne, incorrectTwo, incorrectThree, handleCapitalAnswer, setNextCapitalQuestion, capitalQuizScore, currentCapitalQuestion, capitalResponseGiven}) {\n  \n  function randomizeItems(items) {\n    let cached = items.slice(0), temp, i = cached.length, rand;\n    while(--i) {\n      rand = Math.floor(i * Math.random());\n      temp = cached[rand];\n      cached[rand] = cached[i];\n      cached[i] = temp;\n    }\n    return cached;\n  }\n  \n  function randomizeList() {\n    let list = document.getElementById(\"capital-quiz-buttons\");\n    let nodes = list.children, i = 0;\n    nodes = Array.prototype.slice.call(nodes);\n    nodes = randomizeItems(nodes);\n    while(i < nodes.length) {\n        list.appendChild(nodes[i]);\n        ++i;\n    }\n    list.style.display=\"block\";\n  }\n\n  function capitalOnClick () {\n    if (capitalResponseGiven === true) {\n      randomizeList();\n      setNextCapitalQuestion()\n    }\n  }\n\n      // *** JSX *** //\n    return (\n    <div className='quiz-tv' id=\"capital-quiz-tv\">\n      <div style={{display: 'flex', flexDirection: 'row', justifyContent:'space-between'}}>\n        <h1 className='menu-icon'>Capital Quiz</h1>\n        <h1 style={{paddingRight: '25px'}}>Question: {currentCapitalQuestion}/25 {'   '} Score:{capitalQuizScore}</h1>\n      </div>\n      <div>\n        <h1 \n          className='tab-header' \n          style={{backgroundColor: 'black', \n            color: 'white', \n            marginLeft: '50px', \n            marginRight: '50px'}}\n          >{capitalQuizCountry.capital[0]} is the capital of which country?\n        </h1>\n      </div>\n      <div>\n        <ul style={{display: 'flex', flexDirection: 'row', justifyContent: 'center'}} id='capital-quiz-buttons'>\n          <li>\n            <button \n              name=\"Answer2\"\n              className={'capital-button'}\n              value={incorrectOne.name.common}\n              onClick={handleCapitalAnswer}\n            > {incorrectOne.flag} {incorrectOne.name.common} </button>\n          </li>\n          <li>\n            <button \n            name=\"Answer3\"\n            className={'capital-button'}\n            value={incorrectTwo.name.common}\n            onClick={handleCapitalAnswer}\n          > {incorrectTwo.flag} {incorrectTwo.name.common} </button>\n          </li>\n          <li>\n            <button \n              name=\"Answer4\"\n              className={'capital-button'}\n              value={incorrectThree.name.common}\n              onClick={handleCapitalAnswer}\n            > {incorrectThree.flag} {incorrectThree.name.common} </button>\n          </li>\n          <li>\n            <button \n              name=\"Answer1\" \n              id=\"correct-answer\"\n              className={'capital-button'}\n              value={capitalQuizCountry.name.common}\n              onClick={handleCapitalAnswer}\n            > {capitalQuizCountry.flag} {capitalQuizCountry.name.common} </button>\n          </li>\n        </ul>\n      </div>\n      <div>\n        <button onClick={capitalOnClick} style={{backgroundColor: '#93C572', color: 'black', borderColor: 'black'}}>Next</button>\n      </div>\n    </div>\n  )\n}\n\nexport default ActiveCapitalQuiz","function StartScreen ({startQuiz, message, highScore}) {\n  \n  return(\n    <div className={'quiz-tv'}>\n      <h1>{message} {highScore}</h1>\n      <button onClick={startQuiz}>Start New Quiz</button>\n    </div>\n  )\n}\n\nexport default StartScreen","import {useState} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport ActiveCapitalQuiz from './ActiveCapitalQuiz'\nimport StartScreen from './StartScreen'\n\n\nfunction CapitalQuiz ({countryData, capitalHighScore, setCapitalHighScore, fullUserObject, setUserScore, checkForDuplicates}) {\n  \n  let history = useHistory()\n\n    // *** STATE VARIABLES *** //\n  const [capitalQuizCountry, setCapitalQuizCountry] = useState({})\n  const [incorrectOne, setIncorrectOne] = useState({})\n  const [incorrectTwo, setIncorrectTwo] = useState({})\n  const [incorrectThree, setIncorrectThree] = useState({})\n  const [capitalResponseGiven, setCapitalResponseGiven] = useState(false)\n  const [currentCapitalQuestion, setCurrentCapitalQuestion] = useState(0)\n  const [capitalQuizScore, setCapitalQuizScore] = useState (0)\n\n  function resetButtonColors () {\n    let capitalButtons = document.getElementsByClassName(\"capital-button\");\n    let i;\n    for (i = 0; i < capitalButtons.length; i++) {\n      capitalButtons[i].style.backgroundColor = \"lightgray\";\n      capitalButtons[i].style.color = \"black\";\n    }\n  }\n\n  //  function checkForDuplicates (a, b, c, d, setterB, setterC, setterD, array) {\n  //   while (capitalQuizCountry === incorrectOne) {\n  //     setIncorrectOne(countryData[Math.floor(Math.random()*countryData.length)])\n  //   }\n  //   while (capitalQuizCountry === incorrectTwo) {\n  //     setIncorrectTwo(countryData[Math.floor(Math.random()*countryData.length)])\n  //   }\n  //   while (capitalQuizCountry === incorrectThree) {\n  //     setIncorrectThree(countryData[Math.floor(Math.random()*countryData.length)])\n  //   }\n  //   while (incorrectOne === incorrectTwo) {\n  //     setIncorrectTwo(countryData[Math.floor(Math.random()*countryData.length)])\n  //   }\n  //   while (incorrectOne === incorrectThree) {\n  //     setIncorrectThree(countryData[Math.floor(Math.random()*countryData.length)])\n  //   }\n  //   while (incorrectTwo === incorrectThree) {\n  //     setIncorrectThree(countryData[Math.floor(Math.random()*countryData.length)])\n  //   }\n  // }\n\n  function handleCapitalAnswer (event) {\n    if (capitalResponseGiven === false) {\n      if (event.target.value === capitalQuizCountry.name.common) {\n        event.target.style.backgroundColor = 'green'\n        event.target.style.color = 'white'\n        event.target.style.borderColor = 'black'\n        setCapitalQuizScore(capitalQuizScore + 1)\n      } else {\n        event.target.style.backgroundColor = 'red'\n        document.getElementById('correct-answer').style.backgroundColor = 'green'\n      }\n      setCapitalResponseGiven(true)\n    }\n  }\n\n  function setNextCapitalQuestion () {\n    setCapitalQuizCountry(countryData[Math.floor(Math.random()*countryData.length)])\n    setIncorrectOne(countryData[Math.floor(Math.random()*countryData.length)])\n    setIncorrectTwo(countryData[Math.floor(Math.random()*countryData.length)])\n    setIncorrectThree(countryData[Math.floor(Math.random()*countryData.length)])\n    setCurrentCapitalQuestion(currentCapitalQuestion + 1)\n    setCapitalResponseGiven(false)\n    resetButtonColors()\n    if (currentCapitalQuestion >= 25){\n      if (capitalQuizScore > capitalHighScore) {\n        setCapitalHighScore(capitalQuizScore)\n        \n        \n        // ### Uncomment out once server is set up ### //\n        // patchCapitalUserData()\n        document.getElementById('capital-quiz-tv').innerHTML = `<h1>NEW HIGH SCORE!</h1> <h1>Your Score: ${capitalQuizScore}</h1> <button id='newHS'>View High Scores</button>`\n        document.getElementById('newHS').addEventListener('click', function () {\n          history.push('/quizzes')\n        })\n      } else if (capitalQuizScore <= capitalHighScore) {\n        document.getElementById('capital-quiz-tv').innerHTML = `<h1>Your Score: ${capitalQuizScore}</h1> <button id=\"newHS\">View High Scores</button>`\n        document.getElementById('newHS').addEventListener('click', function () {\n          history.push('/quizzes')\n        })\n      }\n    }\n  }\n\n  const patchCapitalUserData = function () {  \n    fetch(`http://localhost:3000/users/${fullUserObject.id}`, {\n      method: \"PATCH\",\n      headers: {\"Content-Type\": \"application/json\"},\n      body: JSON.stringify({capitalsHighScore: capitalQuizScore}),\n    })\n    .then((res) => {\n      return res.json()\n    })\n    .then(user => {\n      setUserScore(user.flagsHighScore + user.continentsHighScore + user.capitalsHighScore + user.populationHighScore)\n      setCapitalHighScore(user.capitalsHighScore)\n    })\n  }\n\n    // *** JSX *** //\n  return (\n    <div>\n      {currentCapitalQuestion === 0\n        ? \n        <StartScreen \n          startQuiz={setNextCapitalQuestion}\n          message={'CAPITALS - High Score:'}\n          highScore={capitalHighScore}/> \n        : \n        <ActiveCapitalQuiz\n          capitalQuizCountry={capitalQuizCountry}\n          capitalResponseGiven={capitalResponseGiven}\n          incorrectOne={incorrectOne}\n          incorrectTwo={incorrectTwo}\n          incorrectThree={incorrectThree}\n          handleCapitalAnswer={handleCapitalAnswer}\n          setNextCapitalQuestion={setNextCapitalQuestion}\n          currentCapitalQuestion={currentCapitalQuestion}\n          capitalQuizScore={capitalQuizScore}\n          />}\n    </div>\n  )\n}\n\nexport default CapitalQuiz","function ActiveContinentQuiz ({currentContinentQuestion, continentQuizScore, continentResponseGiven, handleAnswer, continentQuizCountry, setNextQuestion}) {\n  \n  function continentOnClick () {\n    if (continentResponseGiven === true) {\n      setNextQuestion()\n    }\n  }\n\n  return (\n    <div className='quiz-tv' id='continent-quiz-tv'>\n      <div style={{display: 'flex', flexDirection: 'row', justifyContent:'space-between'}}>\n        <h1 className='menu-icon'>Continent Quiz</h1>\n        <h1 style={{paddingRight: '25px'}}>\n          Question: {currentContinentQuestion}/25 {'   '} Score:{continentQuizScore}\n        </h1>\n      </div>\n      <div>\n        <h1 \n          className='tab-header' \n          style={{backgroundColor: 'black', \n            color: 'white', \n            marginLeft: '150px', \n            marginRight: '150px'}}>\n          In what continent is {continentQuizCountry.name.common} located?\n        </h1>\n      </div>\n      <div>\n        <button className={'continent-button'} onClick={handleAnswer} name=\"Africa\">Africa</button>\n        <button className={'continent-button'} onClick={handleAnswer} name=\"Asia\">Asia</button>\n        <button className={'continent-button'} onClick={handleAnswer} name=\"Europe\">Europe</button>\n        <button className={'continent-button'} onClick={handleAnswer} name=\"Oceania\">Oceania</button>\n        <button className={'continent-button'} onClick={handleAnswer} name=\"North America\">North America</button>\n        <button className={'continent-button'} onClick={handleAnswer} name=\"South America\">South America</button>\n      </div>\n      <div>\n        <button \n          onClick={continentOnClick} \n          style={{backgroundColor: '#93C572', \n            color: 'black', \n            borderColor: 'black'}}>\n          Next\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default ActiveContinentQuiz","import {useState} from 'react'\nimport { useHistory } from 'react-router-dom';\nimport StartScreen from './StartScreen';\nimport ActiveContinentQuiz from './ActiveContinentQuiz';\n\nfunction ContinentQuiz ({countryData, continentHighScore, setContinentHighScore, fullUserObject, setUserScore}) {\n  \n  let history = useHistory ()\n\n    // *** STATE VARIABLES *** //\n  const [continentQuizCountry, setContinentQuizCountry] = useState(countryData[Math.floor(Math.random()*countryData.length)])\n  const [continentResponseGiven, setContinentResponseGiven] = useState(false)\n  const [currentContinentQuestion, setCurrentContinentQuestion] = useState(0)\n  const [continentQuizScore, setContinentQuizScore] = useState (0)\n\n  function resetButtonColors () {\n    let continentButtons = document.getElementsByClassName(\"continent-button\");\n    let i;\n    for (i = 0; i < continentButtons.length; i++) {\n      continentButtons[i].style.backgroundColor = \"lightgray\";\n      continentButtons[i].style.color = \"black\";\n    }\n  }\n\n  function handleAnswer (event) {\n    if (continentResponseGiven === false) {\n      if (event.target.name === continentQuizCountry.continents[0]) {\n        event.target.style.backgroundColor = 'green'\n        event.target.style.color = 'white'\n        event.target.style.borderColor = 'black'\n        setContinentQuizScore(continentQuizScore + 1)\n      } else {\n        event.target.style.backgroundColor = 'red'\n      }\n      setContinentResponseGiven(true)\n    }\n  }\n\n  function setNextQuestion () {\n    setContinentQuizCountry(countryData[Math.floor(Math.random()*countryData.length)])\n    // if (continentQuizCountry.name.common === 'Russia' || continentQuizCountry.name.common === 'Turkey') {\n    //   setContinentQuizCountry(countryData[Math.floor(Math.random()*countryData.length)])\n    // }\n    setCurrentContinentQuestion(currentContinentQuestion + 1)\n    setContinentResponseGiven(false)\n    resetButtonColors()\n    if (currentContinentQuestion >= 25){\n      if (continentQuizScore > continentHighScore) {\n        setContinentHighScore(continentQuizScore)\n        \n        // ### Uncomment out once server is set up ### //\n        // patchContinentUserData()\n        document.getElementById('continent-quiz-tv').innerHTML = `<h1>NEW HIGH SCORE!</h1> <h1>Your Score: ${continentQuizScore}</h1> <button id='newHS'>View High Scores</button>`\n        document.getElementById('newHS').addEventListener('click', function () {\n          history.push('/quizzes')\n        })\n      } else if (continentQuizScore <= continentHighScore) {\n        document.getElementById('continent-quiz-tv').innerHTML = `<h1>Your Score: ${continentQuizScore}</h1> <button id=\"newHS\">View High Scores</button>`\n        document.getElementById('newHS').addEventListener('click', function () {\n          history.push('/quizzes')\n        })\n      }\n    }\n  }\n\n  const patchContinentUserData = function () {  \n    fetch(`http://localhost:3000/users/${fullUserObject.id}`, {\n      method: \"PATCH\",\n      headers: {\"Content-Type\": \"application/json\"},\n      body: JSON.stringify({continentsHighScore: continentQuizScore}),\n    })\n     .then((res) => {\n          return res.json()\n        })\n      .then(user => { \n        setUserScore(user.flagsHighScore + user.continentsHighScore + user.capitalsHighScore + user.populationHighScore)\n        setContinentHighScore(user.continentsHighScore)\n      }\n    );\n  }\n  \n    // *** JSX *** //\n  return (\n    <div>\n      {currentContinentQuestion === 0\n        ? \n        <StartScreen \n          startQuiz={setNextQuestion}\n          message={'CONTINENTS - High Score:'}\n          highScore={continentHighScore}/> \n        : \n        <ActiveContinentQuiz \n          setNextQuestion={setNextQuestion} \n          continentResponseGiven={continentResponseGiven}\n          continentQuizCountry={continentQuizCountry} \n          handleAnswer={handleAnswer}\n          currentContinentQuestion={currentContinentQuestion}\n          continentQuizScore={continentQuizScore}/>\n        }\n    </div>\n  )\n}\n\nexport default ContinentQuiz","function ActiveFlagQuiz ({ flagQuizCountry, incorrectFlagOne, incorrectFlagTwo, incorrectFlagThree, handleFlagAnswer, setNextFlagQuestion, flagQuizScore, currentFlagQuestion, flagResponseGiven}) {\n  \n  function randomizeItems(items) {\n    let cached = items.slice(0), temp, i = cached.length, rand;\n    while(--i) {\n      rand = Math.floor(i * Math.random());\n      temp = cached[rand];\n      cached[rand] = cached[i];\n      cached[i] = temp;\n    }\n    return cached;\n  }\n  \n  function randomizeList() {\n    let list = document.getElementById(\"flag-quiz-buttons\");\n    let nodes = list.children, i = 0;\n    nodes = Array.prototype.slice.call(nodes);\n    nodes = randomizeItems(nodes);\n    while(i < nodes.length) {\n      list.appendChild(nodes[i]);\n      ++i;\n    }\n    list.style.display=\"block\";\n  }\n\n  function flagOnClick () {\n    if (flagResponseGiven === true) {\n      randomizeList();\n      setNextFlagQuestion()\n    }\n  }\n\n    // *** JSX *** //\n  return (\n  <div className='quiz-tv' id='flag-quiz-tv'>\n    <div style={{display: 'flex', flexDirection: 'row', justifyContent:'space-between'}}>\n      <h1 className='menu-icon'>Flag Quiz</h1>\n      <h1 \n        style={{paddingRight: '25px'}}\n        >Question: {currentFlagQuestion}/25 {'   '} Score:{flagQuizScore}\n      </h1>\n    </div>\n      <div>\n        <div style={{height: '210px'}}>\n          <img style={{height: '210px'}} className='flag-image' src={flagQuizCountry.flags.png} alt='Random Flag'/>\n        </div>\n        <div>\n          <h1 \n            className='tab-header' \n            style={{backgroundColor: 'black', \n              color: 'white', \n              marginLeft: '200px', \n              marginRight: '200px'}}\n            >Which country's flag is this?\n          </h1>\n        </div>\n      </div>\n      <div id='flag-quiz-container'>\n        <ul style={{display: 'flex', flexDirection: 'row', justifyContent: 'center'}} id='flag-quiz-buttons'>\n          <li>\n              <button \n                name=\"flagAnswer2\"\n                className={'flag-button'}\n                style={{backgroundColor: 'lightgray', color: 'black'}}\n                value={incorrectFlagOne.name.common}\n                onClick={handleFlagAnswer}\n                > {incorrectFlagOne.name.common} </button>\n          </li>\n          <li>\n              <button \n                name=\"flagAnswer1\" \n                id=\"correct-answer\"\n                className={'flag-button'}\n                style={{backgroundColor: 'lightgray', color: 'black'}}\n                value={flagQuizCountry.name.common}\n                onClick={handleFlagAnswer}\n              > {flagQuizCountry.name.common} </button>\n          </li>\n          <li>\n              <button \n              name=\"flagAnswer3\"\n              className={'flag-button'}\n              style={{backgroundColor: 'lightgray', color: 'black'}}\n              value={incorrectFlagTwo.name.common}\n              onClick={handleFlagAnswer}\n              > {incorrectFlagTwo.name.common} </button>\n          </li>\n          <li>\n              <button \n                name=\"flagAnswer4\"\n                className={'flag-button'}\n                style={{backgroundColor: 'lightgray', color: 'black'}}\n                value={incorrectFlagThree.name.common}\n                onClick={handleFlagAnswer}\n                > {incorrectFlagThree.name.common} </button>\n          </li>\n        </ul>\n      </div>\n    <div>\n      <button \n        onClick={flagOnClick} \n        style={{backgroundColor: '#93C572', \n          color: 'black', \n          borderColor: 'black'}}\n        >Next\n      </button>\n    </div>\n  </div>\n)\n}\n\nexport default ActiveFlagQuiz","import {useState} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport ActiveFlagQuiz from './ActiveFlagQuiz';\nimport StartScreen from './StartScreen';\n\n\nfunction FlagQuiz ({countryData, flagHighScore, setFlagHighScore, fullUserObject, setUserScore}) {\n\n  let history = useHistory()\n\n    // *** STATE VARIABLES *** //\n  const [flagQuizCountry, setFlagQuizCountry] = useState({})\n  const [incorrectFlagOne, setIncorrectFlagOne] = useState({})\n  const [incorrectFlagTwo, setIncorrectFlagTwo] = useState({})\n  const [incorrectFlagThree, setIncorrectFlagThree] = useState({})\n  const [flagResponseGiven, setFlagResponseGiven] = useState(false)\n  const [currentFlagQuestion, setCurrentFlagQuestion] = useState(0)\n  const [flagQuizScore, setFlagQuizScore] = useState (0)\n\n  function resetButtonColors () {\n    let flagButtons = document.getElementsByClassName(\"flag-button\");\n    let i;\n    for (i = 0; i < flagButtons.length; i++) {\n      flagButtons[i].style.backgroundColor = \"lightgray\";\n      flagButtons[i].style.color = \"black\";\n    }\n  }\n\n  function handleFlagAnswer (event) {\n    if (flagResponseGiven === false) {\n      if (event.target.value === flagQuizCountry.name.common) {\n        event.target.style.backgroundColor = 'green'\n        event.target.style.color = 'white'\n        event.target.style.borderColor = 'black'\n        setFlagQuizScore(flagQuizScore + 1)\n      } else {\n        event.target.style.backgroundColor = 'red'\n        document.getElementById('correct-answer').style.backgroundColor = 'green'\n      }\n      setFlagResponseGiven(true)\n    }\n  }\n\n  function setNextFlagQuestion () {\n    setFlagQuizCountry(countryData[Math.floor(Math.random()*countryData.length)])\n    setIncorrectFlagOne(countryData[Math.floor(Math.random()*countryData.length)])\n    setIncorrectFlagTwo(countryData[Math.floor(Math.random()*countryData.length)])\n    setIncorrectFlagThree(countryData[Math.floor(Math.random()*countryData.length)])\n    setCurrentFlagQuestion(currentFlagQuestion + 1)\n    setFlagResponseGiven(false)\n    resetButtonColors()\n    if (currentFlagQuestion >= 25){\n      if (flagQuizScore > flagHighScore) {\n        setFlagHighScore(flagQuizScore)\n        \n        // ### Uncomment out once server is set up ### //\n        // patchFlagUserData()\n        document.getElementById('flag-quiz-tv').innerHTML = `<h1>NEW HIGH SCORE!</h1> <h1>Your Score: ${flagQuizScore}</h1> <button id='newHS'>View High Scores</button>`\n        document.getElementById('newHS').addEventListener('click', function () {\n          history.push('/quizzes')\n        })\n      } else if (flagQuizScore <= flagHighScore) {\n        document.getElementById('flag-quiz-tv').innerHTML = `<h1>Your Score: ${flagQuizScore}</h1> <button id=\"newHS\">View High Scores</button>`\n        document.getElementById('newHS').addEventListener('click', function () {\n          history.push('/quizzes')\n        })\n      }\n    }\n  }\n\n  const patchFlagUserData = function () {  \n    fetch(`http://localhost:3000/users/${fullUserObject.id}`, {\n      method: \"PATCH\",\n      headers: {\"Content-Type\": \"application/json\"},\n      body: JSON.stringify({flagsHighScore: flagQuizScore}),\n    })\n    .then((res) => {\n      return res.json()\n    })\n    .then(user => {\n      setUserScore(user.flagsHighScore + user.continentsHighScore + user.capitalsHighScore + user.populationHighScore)\n      setFlagHighScore(user.flagsHighScore)\n    });\n  }\n\n    // *** JSX *** //\n  return (\n    <div>\n      {currentFlagQuestion === 0\n        ? \n        <StartScreen \n          startQuiz={setNextFlagQuestion}\n          message={'FLAGS - High Score:'}\n          highScore={flagHighScore}/> \n        : \n        <ActiveFlagQuiz\n          flagQuizCountry={flagQuizCountry}\n          incorrectFlagOne={incorrectFlagOne}\n          incorrectFlagTwo={incorrectFlagTwo}\n          incorrectFlagThree={incorrectFlagThree}\n          handleFlagAnswer={handleFlagAnswer}\n          setNextFlagQuestion={setNextFlagQuestion}\n          flagQuizScore={flagQuizScore}\n          currentFlagQuestion={currentFlagQuestion}\n          flagResponseGiven={flagResponseGiven}\n          />}\n    </div>\n  )\n}\n\nexport default FlagQuiz","function ActivePopulationQuiz ({ orderedCountriesArray, handlePopulationAnswer, setNextPopulationQuestion, populationQuizScore, currentPopulationQuestion, populationResponseGiven}) {\n  \n  function randomizeItems(items) {\n    let cached = items.slice(0), temp, i = cached.length, rand;\n    while(--i) {\n      rand = Math.floor(i * Math.random());\n      temp = cached[rand];\n      cached[rand] = cached[i];\n      cached[i] = temp;\n    }\n    return cached;\n  }\n  \n  function randomizeList() {\n    let list = document.getElementById(\"population-quiz-buttons\");\n    let nodes = list.children, i = 0;\n    nodes = Array.prototype.slice.call(nodes);\n    nodes = randomizeItems(nodes);\n    while(i < nodes.length) {\n      list.appendChild(nodes[i]);\n      ++i;\n    }\n   list.style.display=\"block\";\n  }\n\n  function populationOnClick () {\n    if (populationResponseGiven === true) {\n      randomizeList();\n      setNextPopulationQuestion()\n    }\n  }\n\n    // *** JSX *** //\n  return (\n  <div className='quiz-tv' id=\"population-quiz-tv\">\n    <div style={{display: 'flex', flexDirection: 'row', justifyContent:'space-between'}}>\n      <h1 className='menu-icon'>Population Quiz</h1>\n      <h1 style={{paddingRight: '25px'}}>Question: {currentPopulationQuestion}/25 {'   '} Score:{populationQuizScore}</h1>\n    </div>\n    <div>\n      <h1 className='tab-header' style={{backgroundColor: 'black', color: 'white', marginLeft: '100px', marginRight: '100px'}}>Which of these countries has the highest population?</h1>\n    </div>\n    <div>\n      <ul id='population-quiz-buttons' style={{display: 'flex', flexDirection: 'row', justifyContent: 'center'}}>\n        <li>\n          <button \n            name=\"populationAnswer2\"\n            className={'population-button'}\n            value={orderedCountriesArray[1].name.common}\n            onClick={handlePopulationAnswer}\n            >{orderedCountriesArray[1].flag} {orderedCountriesArray[1].name.common} </button>\n        </li>\n        <li>\n          <button \n          name=\"populationAnswer3\"\n          className={'population-button'}\n          value={orderedCountriesArray[2].name.common}\n          onClick={handlePopulationAnswer}\n          >{orderedCountriesArray[2].flag} {orderedCountriesArray[2].name.common} </button>\n        </li>\n        <li>\n          <button \n            name=\"populationAnswer1\" \n            id='correct-answer'\n            className={'population-button'}\n            value={orderedCountriesArray[0].name.common}\n            onClick={handlePopulationAnswer}\n          > {orderedCountriesArray[0].flag} {orderedCountriesArray[0].name.common} </button>\n        </li>\n        <li>\n          <button \n            name=\"populationAnswer4\"\n            className={'population-button'}\n            value={orderedCountriesArray[3].name.common}\n            onClick={handlePopulationAnswer}\n            >{orderedCountriesArray[3].flag} {orderedCountriesArray[3].name.common}</button>\n        </li>\n      </ul>\n    </div>\n    <div>\n      <button \n        onClick={populationOnClick} \n        style={{backgroundColor: '#93C572', \n          color: 'black', \n          borderColor: 'black'}}\n        >Next\n      </button>\n    </div>\n  </div>\n)\n}\n\nexport default ActivePopulationQuiz","import {useState} from 'react'\nimport { useHistory } from 'react-router-dom';\nimport ActivePopulationQuiz from './ActivePopulationQuiz';\nimport StartScreen from './StartScreen';\n\n\nfunction PopulationQuiz ({countryData, orderNumbers, populationHighScore, setPopulationHighScore, fullUserObject, setUserScore}) {\n\n  let history = useHistory()\n\n    // *** STATE VARIABLES *** //\n  const [orderedCountriesArray, setOrderedContriesArray] = useState([]) \n  const [populationResponseGiven, setPopulationResponseGiven] = useState(false)\n  const [currentPopulationQuestion, setCurrentPopulationQuestion] = useState(0)\n  const [populationQuizScore, setPopulationQuizScore] = useState (0)\n\n\n  function resetButtonColors () {\n    let populationButtons = document.getElementsByClassName(\"population-button\");\n    let i;\n    for (i = 0; i < populationButtons.length; i++) {\n      populationButtons[i].style.backgroundColor = \"lightgray\";\n      populationButtons[i].style.color = \"black\";\n    }\n  }\n\n  function handlePopulationAnswer (event) {\n    if (populationResponseGiven === false) {\n      if (event.target.value === orderedCountriesArray[0].name.common) {\n        event.target.style.backgroundColor = 'green'\n        event.target.style.color = 'white'\n        event.target.style.borderColor = 'black'\n        setPopulationQuizScore(populationQuizScore + 1)\n      } else {\n        event.target.style.backgroundColor = 'red'\n        document.getElementById('correct-answer').style.backgroundColor = 'green'\n     }\n      setPopulationResponseGiven(true)\n    }\n  }\n\n  \n  function setNextPopulationQuestion () {\n    let newRandomCorrectCountry = countryData[Math.floor(Math.random()*countryData.length)];\n    let newRandomIncorrectOne = countryData[Math.floor(Math.random()*countryData.length)];\n    let newRandomIncorrectTwo = countryData[Math.floor(Math.random()*countryData.length)];\n    let newRandomIncorrectThree = countryData[Math.floor(Math.random()*countryData.length)];  \n    let newRandomCountriesArray = [newRandomCorrectCountry, newRandomIncorrectOne, newRandomIncorrectTwo, newRandomIncorrectThree]\n    setOrderedContriesArray(newRandomCountriesArray.sort(orderNumbers))\n    setCurrentPopulationQuestion(currentPopulationQuestion + 1)\n    setPopulationResponseGiven(false)\n    resetButtonColors()\n    if (currentPopulationQuestion >= 25){\n      if (populationQuizScore > populationHighScore) {\n        setPopulationHighScore(populationQuizScore)\n        \n        \n        // ### Uncomment out once server is set up ### //\n        // patchPopulationUserData()\n        document.getElementById('population-quiz-tv').innerHTML = `<h1>NEW HIGH SCORE!</h1> <h1>Your Score: ${populationQuizScore}</h1> <button id='newHS'>View High Scores</button>`\n        document.getElementById('newHS').addEventListener('click', function () {\n          history.push('/quizzes')\n        })\n      } else if (populationQuizScore <= populationHighScore) {\n        document.getElementById('population-quiz-tv').innerHTML = `<h1>Your Score: ${populationQuizScore}</h1> <button id=\"newHS\">View High Scores</button>`\n        document.getElementById('newHS').addEventListener('click', function () {\n          history.push('/quizzes')\n        })\n      }\n    }\n  }\n\n  const patchPopulationUserData = function () {  \n    fetch(`http://localhost:3000/users/${fullUserObject.id}`, {\n      method: \"PATCH\",\n      headers: {\"Content-Type\": \"application/json\"},\n      body: JSON.stringify({populationHighScore: populationQuizScore}),\n    })\n    .then((res) => {\n      return res.json()\n    })\n    .then(user => {\n      setUserScore(user.flagsHighScore + user.continentsHighScore + user.capitalsHighScore + user.populationHighScore)\n      setPopulationHighScore(user.populationHighScore)\n    });\n  }\n\n    // *** JSX *** //\n  return (\n    <div>\n      {currentPopulationQuestion === 0\n        ? \n        <StartScreen \n          startQuiz={setNextPopulationQuestion}\n          message={'POPULATION - High Score:'}\n          highScore={populationHighScore}/> \n        : \n        <ActivePopulationQuiz\n          orderedCountriesArray={orderedCountriesArray}\n          populationResponseGiven={populationResponseGiven}\n          handlePopulationAnswer={handlePopulationAnswer}\n          setNextPopulationQuestion={setNextPopulationQuestion}\n          populationQuizScore={populationQuizScore}\n          fullUserObject={fullUserObject}\n          currentPopulationQuestion={currentPopulationQuestion}\n        />}\n    </div>\n  )\n}\n\nexport default PopulationQuiz\n\n","import { Route, Switch, NavLink } from 'react-router-dom'\n\nimport QuizHome from './QuizHome'\nimport CapitalQuiz from \"./CapitalQuiz\"\nimport ContinentQuiz from \"./ContinentQuiz\"\nimport FlagQuiz from \"./FlagQuiz\"\nimport PopulationQuiz from \"./PopulationQuiz\"\nimport { useEffect } from 'react'\n\nfunction Quizzes ({countryData, \n  orderNumbers, \n  fullUserObject, \n  setUserScore, \n  userScore, \n  continentHighScore, \n  setContinentHighScore, \n  capitalHighScore, \n  setCapitalHighScore, \n  flagHighScore, \n  setFlagHighScore, \n  populationHighScore,\n  setPopulationHighScore}) {\n\n    useEffect (() => {\n      document.title = \"WQW - Quizzes\"\n    }, [] )\n\n  // function checkForDuplicates (a, b, c, d, setterB, setterC, setterD, countryArray) {\n  //   while (a === b) {\n  //     setterB(countryArray[Math.floor(Math.random()*countryArray.length)])\n  //   }\n  //   while (a === c) {\n  //     setterC(countryArray[Math.floor(Math.random()*countryArray.length)])\n  //   }\n  //   while (a === d) {\n  //     setterD(countryArray[Math.floor(Math.random()*countryArray.length)])\n  //   }\n  //   while (b === c) {\n  //     setterC(countryArray[Math.floor(Math.random()*countryArray.length)])\n  //   }\n  //   while (b === d) {\n  //     setterD(countryArray[Math.floor(Math.random()*countryArray.length)])\n  //   }\n  //   while (c === d) {\n  //     setterD(countryArray[Math.floor(Math.random()*countryArray.length)])\n  //   }\n  // }\n\n    // *** JSX *** //\n  return (\n    <>\n      <div className='quiz-page'>\n        <h1 className='tab-header'>Quizzes</h1>\n        <NavLink to=\"/quizzes\"  exact className='quiz-menu' activeStyle={{background: \"#93C572\", color: 'black'}}>Quiz Home</NavLink>\n        <NavLink to=\"/quizzes/population-quiz\" className='quiz-menu' activeStyle={{background: \"#93C572\", color: 'black'}}>Population Quiz</NavLink>\n        <NavLink to=\"/quizzes/flag-quiz\" className='quiz-menu' activeStyle={{background: \"#93C572\", color: 'black'}}>Flag Quiz</NavLink>\n        <NavLink to=\"/quizzes/continent-quiz\" className='quiz-menu' activeStyle={{background: \"#93C572\", color: 'black'}}>Continent Quiz</NavLink>\n        <NavLink to=\"/quizzes/capital-quiz\" className='quiz-menu' activeStyle={{background: \"#93C572\", color: 'black'}}>Capital Quiz</NavLink>\n        <Switch>\n          <Route exact path='/quizzes'>\n            <QuizHome \n              continentHighScore={continentHighScore}\n              populationHighScore={populationHighScore}\n              flagHighScore={flagHighScore}\n              userScore={userScore}\n              capitalHighScore={capitalHighScore}\n              fullUserObject={fullUserObject}/>\n          </Route>\n          <Route exact path='/quizzes/population-quiz' >\n            <PopulationQuiz \n              className='quiz-menu' \n              countryData={countryData} \n              orderNumbers={orderNumbers}\n              populationHighScore={populationHighScore}\n              setPopulationHighScore={setPopulationHighScore}\n              setUserScore={setUserScore}\n              fullUserObject={fullUserObject}/>\n          </Route>\n          <Route path='/quizzes/flag-quiz' >\n            <FlagQuiz \n              className='quiz-menu' \n              countryData={countryData}\n              flagHighScore={flagHighScore}\n              setFlagHighScore={setFlagHighScore}\n              setUserScore={setUserScore}\n              fullUserObject={fullUserObject}/>\n          </Route>\n          <Route path='/quizzes/continent-quiz'> \n            <ContinentQuiz \n              className='quiz-menu' \n              countryData={countryData}\n              continentHighScore={continentHighScore}\n              setContinentHighScore={setContinentHighScore}\n              setUserScore={setUserScore}\n              fullUserObject={fullUserObject}/>\n          </Route>\n          <Route path='/quizzes/capital-quiz' >\n            <CapitalQuiz \n              className='quiz-menu' \n              countryData={countryData}\n              capitalHighScore={capitalHighScore}\n              setCapitalHighScore={setCapitalHighScore}\n              setUserScore={setUserScore}\n              fullUserObject={fullUserObject}/>\n          </Route>\n        </Switch>\n      </div>\n    </>\n  )\n}\n\nexport default Quizzes","function Country ({country}) {\n\n  const nativeNameObject = Object.values(country.name.nativeName)\n  const officialLanguages = Object.values(country.languages)\n  const officialCurrenciesObject = Object.values(country.currencies)\n\n    // *** JSX *** //\n  return (\n    <div className={'country_card'}>\n      <h2 style={{cursor: 'default', textAlign: 'center'}}>\n        {country.name.common}\n      </h2>\n      <img className={'flag_card'} style={{border: '2px solid'}}src={country.flags.png} alt=\"Flag\" />\n      <h5 style={{textAlign: 'center', marginTop: '0px'}}>\n        {nativeNameObject[0].common}\n      </h5>\n      <h3>Capital: {country.capital}</h3>\n      <h4>Continent: {country.continents[0]}</h4>\n      <h5>Subregion: {country.subregion}</h5>\n      <h4>Population: {(country.population).toLocaleString()}</h4>\n      <h4>Area: {(country.area).toLocaleString()} square km</h4>\n      <h4>\n        {officialLanguages.length === 1 \n            ? \n          'Official language:' \n            : \n          'Official languages:'} \n        {officialLanguages.join(', ')}\n      </h4>\n      <h4>Official Currency: {officialCurrenciesObject[0].symbol} <br/> {officialCurrenciesObject[0].name} </h4>\n      <>{officialCurrenciesObject.length > 1 \n          ? \n        <h4>and {officialCurrenciesObject[1].symbol} {officialCurrenciesObject[1].name}</h4> \n          : \n        null}\n      </>\n      <h5>Driving Side of Street: {country.car.side}</h5>\n    </div>\n  )\n}\n\nexport default Country","function Filter({onSearchText, onSetSearchText}) {\n\n  function onLetterChange (event) {\n    onSetSearchText(event.target.value)\n  }\n  \n  function onSearchChange (event) {\n    onSetSearchText(event.target.value)\n  }\n\n    // *** JSX *** //\n  return (\n    <div className=\"Filter\">\n      <div>\n        <input type=\"text\" value={onSearchText} name=\"search\" onChange={onSearchChange} placeholder=\"Search...\" />\n      </div>\n      <div id='letter-filter' style={{display: 'flex', flexFlow: 'row wrap', justifyContent: 'center', margin: '5px'}}>\n        <button onClick={onLetterChange} value=\"\" style={{width: '35px'}}>All</button>\n        <button onClick={onLetterChange} value=\"a\">A</button>\n        <button onClick={onLetterChange} value=\"b\">B</button>\n        <button onClick={onLetterChange} value=\"c\">C</button>\n        <button onClick={onLetterChange} value=\"d\">D</button>\n        <button onClick={onLetterChange} value=\"e\">E</button>\n        <button onClick={onLetterChange} value=\"f\">F</button>\n        <button onClick={onLetterChange} value=\"g\">G</button>\n        <button onClick={onLetterChange} value=\"h\">H</button>\n        <button onClick={onLetterChange} value=\"i\">I</button>\n        <button onClick={onLetterChange} value=\"j\">J</button>\n        <button onClick={onLetterChange} value=\"k\">K</button>\n        <button onClick={onLetterChange} value=\"l\">L</button>\n        <button onClick={onLetterChange} value=\"m\">M</button>\n        <button onClick={onLetterChange} value=\"n\">N</button>\n        <button onClick={onLetterChange} value=\"o\">O</button>\n        <button onClick={onLetterChange} value=\"p\">P</button>\n        <button onClick={onLetterChange} value=\"q\">Q</button>\n        <button onClick={onLetterChange} value=\"r\">R</button>\n        <button onClick={onLetterChange} value=\"s\">S</button>\n        <button onClick={onLetterChange} value=\"t\">T</button>\n        <button onClick={onLetterChange} value=\"u\">U</button>\n        <button onClick={onLetterChange} value=\"v\">V</button>\n        <button onClick={onLetterChange} value=\"w\">W</button>\n        <button onClick={onLetterChange} value=\"x\">X</button>\n        <button onClick={onLetterChange} value=\"y\">Y</button>\n        <button onClick={onLetterChange} value=\"z\">Z</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Filter;","import { useState, useEffect } from \"react\"\nimport Country from \"./Country\"\nimport Filter from './Filter'\n\nfunction CountriesList ({countries, alphabetizeCountries}) {\n\n    // *** STATE VARIABLES *** //\n  const [searchText, setSearchText] = useState('')\n\n  const filteredCountryList = countries.filter((country) => {\n    return country.name.common.toLowerCase().startsWith(searchText.toLowerCase())\n  })\n\n  useEffect (() => {\n    document.title = \"WQW - Countries\"\n  }, [] )\n\n    // *** JSX *** //\n  return (\n    <div style={{marginTop: '-10px'}}>\n      <div>\n        <h1 className='tab-header'>Country Information</h1>\n      </div>\n      <div style={{marginTop: '0px'}} >\n        <Filter onSearchText={searchText} onSetSearchText={setSearchText}/>\n      </div>\n      <div \n        style={{display:'flex', \n          flexDirection: 'row', \n          flexWrap: 'wrap', \n          justifyContent: 'center'}}\n          > \n          {filteredCountryList.sort(alphabetizeCountries).map((country) => (\n            <Country \n            key={country.name.common}\n            country={country}\n          />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default CountriesList","import { NavLink } from 'react-router-dom'\n\nconst linkStyles = {\n  display: \"inline-block\",\n  width: \"70px\",\n  padding: \"12px\",\n  margin: \"0 6px 6px\",\n  background: \"#609240\",\n  textDecoration: \"none\",\n  color: \"white\",\n  borderRadius: '5px'\n};\n\nfunction NavBar({ login, setLogin, enterUserName, userName, userScore}) {\n\n  function handleLoginType (event) {\n    setLogin(event.target.value)\n  }\n\n  function alertNoServer () {\n    window.alert('Server not yet set up. Login feature not available. You may take the quizzes, but your data will not be saved.')\n  }\n\n    // *** JSX *** //\n  return (\n    <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'space-between'}}>\n      <div>\n      <NavLink\n        to='/'\n        exact\n        className='nav-link'\n        style={linkStyles}\n        activeStyle={{background: \"#93C572\", color: 'black'}}\n      >\n        Home\n      </NavLink>\n      <NavLink\n        to='/countries'\n        exact\n        className='nav-link'\n        style={linkStyles}\n        activeStyle={{background: \"#93C572\", color: 'black'}}\n      >\n        Countries\n      </NavLink>\n      <NavLink\n        to='/capitals'\n        exact\n        className='nav-link'\n        style={linkStyles}\n        activeStyle={{background: \"#93C572\", color: 'black'}}\n      >\n        Capitals\n      </NavLink>\n      <NavLink\n        to='/continents'\n        exact\n        className='nav-link'\n        style={linkStyles}\n        activeStyle={{background: \"#93C572\", color: 'black'}}\n      >\n        Continents\n      </NavLink>\n      <NavLink\n        to='/flags'\n        exact\n        className='nav-link'\n        style={linkStyles}\n        activeStyle={{background: \"#93C572\", color: 'black'}}\n      >\n        Flags\n      </NavLink>\n      <NavLink\n        to='/population'\n        exact\n        className='nav-link'\n        style={linkStyles}\n        activeStyle={{background: \"#93C572\", color: 'black'}}\n      >\n        Population\n      </NavLink>\n      <NavLink\n        to='/quizzes'\n        exact\n        className='nav-link'\n        style={linkStyles}\n        activeStyle={{background: \"#93C572\", color: 'black'}}\n      >\n        Quizzes\n      </NavLink>\n      </div>\n      {/* <div style={{display: 'flex', flexDirection: 'row', alignItems: 'flex-start'}}>\n        <h3 \n          style={{paddingRight: '5px', \n          verticalAlign: 'top', \n          marginTop: '5px', \n          color: 'black'}}>\n          {userName === '' \n        ? \n          null \n        : \n          `${userName}: ${userScore} ⭐`}\n        </h3>\n         <form \n          onChange={handleLoginType}\n\n\n      //### Uncomment out once server is set up ### //\n          // onSubmit={enterUserName}\n\n          onSubmit={alertNoServer}\n          value={login}\n          id='username-form'>\n          <input \n            style={{marginTop: '8px'}} \n            name='username_input'\n            type='text' \n\n    placeholder='Future feature'>\n\n  \n          </input>\n          <button\n            type='submit'\n            value=\"Enter\"\n            style={{marginTop: '2px'}} \n            id='login-button'\n            text='Enter'>\n              Enter\n           </button>\n        </form>\n      </div> */}\n    </div>\n  )\n}\n\nexport default NavBar","import { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom'\nimport Capitals from './Capitals'\nimport Flags from './Flags'\nimport Continents from './Continents'\nimport Population from './Population'\nimport Home from './Home'\nimport Quizzes from './Quizzes';\nimport CountriesList from './CountriesList';\nimport NavBar from './NavBar';\n\nimport './App.css'\n\nfunction App() {\n\n    // *** STATE VARIABLES *** //\n  const [countries, setCountries] = useState([])\n  const [flagCountryList, setFlagCountryList] = useState([])\n  const [continentCountryList, setContinentCountryList] = useState([])\n  const [capitalCountryList, setCapitalCountryList] = useState([])\n  const [flagsContinent, setFlagsContinent] = useState('the world')\n  const [capitalsContinent, setCapitalsContinent] = useState('the world')\n  const [selectedContinents, setSelectedContinents] = useState(\"the world\");\n  const [userName, setUserName] = useState('')\n  const [fullUserObject, setFullUserObject] = useState({\n    \"userName\": \"Player\",\n    \"flagsHighScore\": 0,\n    \"populationHighScore\": 0,\n    \"continentsHighScore\": 0,\n    \"capitalsHighScore\": 0\n  })\n  const [userScore, setUserScore] = useState(0)\n  const [continentHighScore, setContinentHighScore] = useState(fullUserObject.continentsHighScore)\n  const [flagHighScore, setFlagHighScore] = useState(fullUserObject.flagsHighScore)\n  const [capitalHighScore, setCapitalHighScore] = useState(fullUserObject.capitalsHighScore)\n  const [populationHighScore, setPopulationHighScore] = useState(fullUserObject.populationHighScore)\n  const [login, setLogin] = useState('')\n\n  useEffect (() => {\n    fetch('https://restcountries.com/v3.1/all')\n    .then(res => res.json())\n    .then(data => {\n      const unMemberCountries = data.filter((country) => country.unMember === true || country.cca2 === 'PS' || country.cca2 === 'GW');\n      // console.log('un', unMemberCountries);\n      setCountries(unMemberCountries)\n      setFlagCountryList(unMemberCountries)\n      setContinentCountryList(unMemberCountries)\n      setCapitalCountryList(unMemberCountries)\n    })\n  }, [] )\n\n  function enterUserName (event) {\n    event.preventDefault()\n    document.getElementById('username-form').reset()\n    setUserName(login)\n    if (login !== '') {\n      fetch(`http://localhost:3000/users`, {method: 'GET'})\n      .then(res => res.json())\n      .then(function (userData) {\n          let foundUser = userData.find((user) => {\n            return login === user.userName\n          })\n        if (foundUser) {\n          setFullUserObject(foundUser)\n          setContinentHighScore(foundUser.continentsHighScore)\n          setCapitalHighScore(foundUser.capitalsHighScore)\n          setFlagHighScore(foundUser.flagsHighScore)\n          setPopulationHighScore(foundUser.populationHighScore)\n          setUserScore(foundUser.flagsHighScore + foundUser.populationHighScore + foundUser.continentsHighScore + foundUser.capitalsHighScore)\n        } else {\n          let newUserObject = {\n            \"userName\": login,\n            \"flagsHighScore\": 0,\n            \"populationHighScore\": 0,\n            \"continentsHighScore\": 0,\n            \"capitalsHighScore\": 0\n          }\n          postUserData(newUserObject)\n        }\n      })\n    }\n  }\n\n  function postUserData (object) {  \n    fetch(`http://localhost:3000/users`, {\n      method: \"POST\",\n      headers: {\"Content-Type\": \"application/json\",},\n      body: JSON.stringify(object),\n    })\n      .then((res) => {\n        return res.json()\n      })\n      .then(fullUserObject => {\n        setFullUserObject(fullUserObject)\n        setContinentHighScore(fullUserObject.continentsHighScore)\n        setCapitalHighScore(fullUserObject.capitalsHighScore)\n        setFlagHighScore(fullUserObject.flagsHighScore)\n        setPopulationHighScore(fullUserObject.populationHighScore)\n        setUserScore(fullUserObject.flagsHighScore + fullUserObject.populationHighScore + fullUserObject.continentsHighScore + fullUserObject.capitalsHighScore)\n      });\n  }\n\n  function alphabetize ( a, b ) {\n    if ( a.name.common < b.name.common ){\n      return -1;\n    }\n    if ( a.name.common > b.name.common ){\n      return 1;\n    }\n    return 0;\n  }\n\n  function orderNumbers ( a, b ) {\n    if ( a.population < b.population ){\n      return 1;\n    }\n    if ( a.population > b.population ){\n      return -1;\n    }\n    return 0;\n  }\n\n    // *** JSX *** //\n  return (\n    <div className='App'>\n      <NavBar \n        className='NavBar'\n        userName={userName}\n        userScore={userScore}\n        enterUserName={enterUserName}\n        login={login}\n        setLogin={setLogin}/>\n        <Switch>\n        <Route exact path='/countries'>\n            <CountriesList \n              alphabetizeCountries={alphabetize} \n              countries={countries}/>\n          </Route>\n          <Route path='/quizzes'>\n            <Quizzes \n              countryData={[...countries]} \n              orderNumbers={orderNumbers} \n              userScore={userScore}\n              setUserScore={setUserScore}\n              continentHighScore={continentHighScore}\n              setContinentHighScore={setContinentHighScore}\n              capitalHighScore={capitalHighScore}\n              setCapitalHighScore={setCapitalHighScore}\n              flagHighScore={flagHighScore}\n              setFlagHighScore={setFlagHighScore}\n              populationHighScore={populationHighScore}\n              setPopulationHighScore={setPopulationHighScore}\n              fullUserObject={fullUserObject}\n              setFullUserObject={setFullUserObject}/>\n          </Route>\n          <Route path='/capitals'>\n            <Capitals \n              capitalCountryList={capitalCountryList}\n              setCapitalCountryList={setCapitalCountryList}\n              countries={countries}\n              capitalsContinent={capitalsContinent}\n              setCapitalsContinent={setCapitalsContinent}/>\n          </Route>\n          <Route exact path='/continents'>\n            <Continents \n              alphabetize={alphabetize} \n              continentCountryList={continentCountryList}\n              countries={countries}\n              setContinentCountryList={setContinentCountryList}\n              selectedContinents={selectedContinents}\n              setSelectedContinents={setSelectedContinents}/>\n          </Route>\n          <Route exact path='/population'>\n            <Population \n              countries={[...countries.sort(orderNumbers)]}/>\n          </Route>\n          <Route exact path='/flags'>\n            <Flags \n              allCountries={countries} \n              flagCountryList={flagCountryList} \n              setFlagCountryList={setFlagCountryList}\n              flagsContinent={flagsContinent}\n              setFlagsContinent={setFlagsContinent}/>\n          </Route>\n          <Route exact path='/'>\n            <Home />\n          </Route>\n        </Switch>\n       \n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import { BrowserRouter } from 'react-router-dom'\nimport { HashRouter as Router } from \"react-router-dom\";\nimport App from './App';\n\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\ndocument.getElementById(\"root\"));"],"sourceRoot":""}